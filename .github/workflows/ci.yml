---
name: CI

on: # yamllint disable
  workflow_dispatch: {}
  push:
    branches:
      - master
      - beta
      - sdk-release/**
      - feature/**
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:
    branches:
      - master
      - beta
      - sdk-release/**
      - feature/**

jobs:
  lint:
    name: Static Checks
    runs-on: "ubuntu-24.04"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/base.txt -r requirements/dev.txt
      # - name: check mypy
      #   run: mypy .
      - name: check linting
        run: ruff check .
      - name: check formatting
        run: ruff format --check

  build:
    name: Build
    runs-on: "ubuntu-24.04"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/base.txt -r requirements/dev.txt

      - name: Build and check package
        run: |
          python -m build

      - name: "Upload Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  test:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        python_version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
          # - "pypy-3.7"
          # - "pypy-3.9"
          # - "pypy-3.10"
    name: Test (${{ matrix.python_version }})
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/base.txt -r requirements/dev.txt
      - name: "run tests"
        run: python -m unittest

  publish:
    name: Publish
    if: >-
      ((github.event_name == 'workflow_dispatch') || (github.event_name == 'push')) &&
      startsWith(github.ref, 'refs/tags/v')
    needs: [build, test, lint]
    runs-on: "ubuntu-24.04"
    steps:
      - uses: actions/checkout@v3
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/base.txt -r requirements/dev.txt
      - name: Publish packages to PyPI
        # could probably move this into a just recipe too?
        run: |
          export VERSION=$(cat VERSION)
          python -m twine upload --verbose dist/razorpay_py-$VERSION.tar.gz  dist/razorpay_py-$VERSION-py3-none-any.whl
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
